### YamlMime:Tutorial
title: "Tworzenie maszyn wirtualnych przy użyciu programu Azure PowerShell"
metadata:
  title: "Tworzenie maszyn wirtualnych przy użyciu programu Azure PowerShell"
  description: "Rozpocznij pracę z programem Azure PowerShell przez utworzenie maszyn wirtualnych."
  audience: Developer
  level: Beginner
  displayType: two-column
  interactive: azurepowershell
  ms.date: 02/08/2018
  ms.author: sewhee
  author: sdwheeler
  manager: carmonm
  ms.devlang: azure-powershell
  ms.technology: azure
  ms.openlocfilehash: bb5024927da7888dca406a522fa39dfe225afb89
  ms.sourcegitcommit: 20af779cd523c758d40e23d60eb989a4ef982d5c
  ms.translationtype: HT
  ms.contentlocale: pl-PL
  ms.lasthandoff: 03/15/2018
items:
- durationInMinutes: 1
  content: "W tym samouczku poznasz wszystkie kroki związane z konfigurowaniem maszyny wirtualnej za pomocą programu Azure PowerShell. Samouczek obejmuje również dane wyjściowe zapytań, ponowne używanie zasobów platformy Azure i czyszczenie zasobów.\n\nKroki tego samouczka można wykonać za pomocą środowiska interaktywnego oferowanego przez usługę Azure Cloud Shell. Ewentualnie możesz [zainstalować program Azure PowerShell](install-azurerm-ps.md) lokalnie.\n\nUżyj klawiszy __ctrl-shift-v__ (__cmd-shift-v__ w systemie macOS), aby wkleić tekst samouczka do usługi Azure Cloud Shell."
- durationInMinutes: 1
  title: "Logowanie się"
  content: "Jeśli korzystasz z lokalnej instalacji programu Azure PowerShell, musisz się zalogować przed wykonaniem pozostałych kroków.\n\n```powershell\nLogin-AzureRmAccount\n```\n\nUkończ proces logowania, wykonując kroki wyświetlane w terminalu."
- durationInMinutes: 1
  title: "Tworzenie grupy zasobów"
  content: "Na platformie Azure wszystkie zasoby są przydzielane w grupie zarządzania zasobami. Grupy zasobów zapewniają logiczne grupowanie zasobów, co ułatwia pracę z nimi jako kolekcją.\nNa potrzeby tego samouczka wszystkie utworzone zasoby trafiają do jednej grupy o nazwie `TutorialResources`.\n\n```powershell\nNew-AzureRmResourceGroup -Name TutorialResources -Location eastus\n```\n\n```Output\nResourceGroupName : TutorialResources\nLocation          : eastus\nProvisioningState : Succeeded\nTags              :\nResourceId        : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources\n```"
- durationInMinutes: 1
  title: "Tworzenie poświadczeń administratora dla maszyny wirtualnej"
  content: "Przed utworzeniem nowej maszyny wirtualnej musisz utworzyć obiekt poświadczeń zawierający nazwę użytkownika i hasło dla konta administratora maszyny wirtualnej z systemem Windows.\n\n```powershell\n$cred = Get-Credential -Message \"Enter a username and password for the virtual machine.\"\n```\n\nWprowadź nazwę użytkownika i hasło po wyświetleniu monitu. Wynikowy obiekt poświadczeń zostanie przekazany jako parametr w następnym kroku.\n\n```Output\nWindows PowerShell credential request.\nEnter a username and password for the virtual machine.\nUser: tutorAdmin\nPassword for user tutorAdmin: *********\n```"
- durationInMinutes: 4
  title: Tworzenie maszyny wirtualnej
  content: "Maszyny wirtualne na platformie Azure mają wiele zależności. Program Azure PowerShell tworzy te zasoby na podstawie określonych argumentów wiersza polecenia. Aby zwiększyć czytelność, używamy [operacji tworzenia pakietów parametrów programu PowerShell](/powershell/module/microsoft.powershell.core/about/about_splatting) w celu przekazania parametrów do poleceń cmdlet programu Azure PowerShell.\n\nUtwórz nową maszynę wirtualną z systemem Windows.\n\n```powershell\n$vmParams = @{\n  ResourceGroupName = 'TutorialResources'\n  Name = 'TutorialVM1'\n  Location = 'eastus'\n  ImageName = 'Win2016Datacenter'\n  PublicIpAddressName = 'tutorialPublicIp'\n  Credential = $cred\n  OpenPorts = 3389\n}\n$newVM1 = New-AzureRmVM @vmParams\n```\nPodczas tworzenia maszyny wirtualnej widoczne są używane wartości parametrów i tworzone zasoby platformy Azure.\nProgram PowerShell wyświetli pasek postępu, jak pokazano poniżej.\n\n```Output\n Creating Azure resources\n  39% \\\n  [ooooooooooooooooooooooooooooooooooo                                                                 ]\n\n  Creating TutorialVM1 virtual machine.\n```\n\nGdy maszyna wirtualna będzie gotowa, możemy wyświetlić wyniki w witrynie Azure Portal lub sprawdzając zmienną \\$newVM1.\n\n```powershell\n$newVM1\n```\n\n```Output\nResourceGroupName : TutorialResources\nId                : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources/providers/Microsoft.Compute/virtualMachines/TutorialVM1\nVmId              : 12345678-9abc-def0-1234-56789abcedf0\nName              : TutorialVM1\nType              : Microsoft.Compute/virtualMachines\nLocation          : eastus\nTags              : {}\nHardwareProfile   : {VmSize}\nNetworkProfile    : {NetworkInterfaces}\nOSProfile         : {ComputerName, AdminUsername, WindowsConfiguration, Secrets}\nProvisioningState : Succeeded\nStorageProfile    : {ImageReference, OsDisk, DataDisks}\n```\n\nWartości właściwości podane w nawiasach klamrowych są obiektami zagnieżdżonymi. W następnym kroku pokażemy, jak wyświetlić konkretne wartości w tych obiektach zagnieżdżonych."
- durationInMinutes: 5
  title: "Uzyskiwanie informacji o maszynie wirtualnej za pomocą zapytań"
  content: "Uzyskajmy trochę więcej szczegółowych informacji o maszynie wirtualnej, którą właśnie utworzyliśmy. W tym przykładzie weryfikujemy nazwę maszyny wirtualnej i utworzone konto administratora.\n\n```powershell\n$newVM1.OSProfile | Select-Object ComputerName,AdminUserName\n```\n\n```Output\nComputerName AdminUsername\n------------ -------------\nTutorialVM1  tutorialAdmin\n```\n\nMożemy użyć innych poleceń programu Azure PowerShell, aby uzyskać konkretne informacje dotyczące konfiguracji sieci.\n\n```powershell\n$newVM1 | Get-AzureRmNetworkInterface |\n  Select-Object -ExpandProperty IpConfigurations |\n    Select-Object Name,PrivateIpAddress\n```\n\nW tym przykładzie używamy potoku programu PowerShell w celu wysłania obiektu \\$newVM1 do polecenia cmdlet `Get-AzureRmNetworkInterface`. Z wynikowego obiektu interfejsu sieciowego wybieramy zagnieżdżony obiekt IpConfigurations. Z obiektu IpConfigurations wybieramy właściwości Name i PrivateIpAddress.\n\n```Output\nName        PrivateIpAddress\n----        ----------------\nTutorialVM1 192.168.1.4\n```\n\nAby upewnić się, że maszyna wirtualna jest uruchomiona, musimy nawiązać połączenie za pomocą Pulpitu zdalnego. W tym celu będzie potrzebny publiczny adres IP.\n\n```powershell\n$publicIp = Get-AzureRmPublicIpAddress -Name tutorialPublicIp -ResourceGroupName TutorialResources\n\n$publicIp | Select-Object Name,IpAddress,@{label='FQDN';expression={$_.DnsSettings.Fqdn}}\n```\n\nW tym przykładzie używamy polecenia `Get-AzureRmPublicIpAddress` i zapisujemy wyniki w zmiennej \\$publicIp. Z tej zmiennej wybieramy właściwości i za pomocą wyrażenia pobieramy zagnieżdżoną właściwość Fqdn.\n\n```Output\nName             IpAddress           FQDN\n----             ---------           ----\ntutorialPublicIp <PUBLIC_IP_ADDRESS> tutorialvm1-8a0999.eastus.cloudapp.azure.com\n```\n\nZ poziomu maszyny lokalnej możesz uruchomić następujące polecenie, aby nawiązać połączenie z maszyną wirtualną za pośrednictwem Pulpitu zdalnego.\n\n```powershell\nmstsc.exe /v <PUBLIC_IP_ADDRESS>\n```\n\nAby uzyskać więcej informacji na temat wykonywania zapytań dotyczących właściwości obiektu, zobacz [Wykonywanie zapytań dotyczących zasobów platformy Azure](./queries-azureps.md)."
- durationInMinutes: 4
  title: "Tworzenie nowej maszyny wirtualnej w istniejącej podsieci"
  content: "Druga maszyna wirtualna używa istniejącej podsieci.\n\n```powershell\n$vm2Params = @{\n  ResourceGroupName = 'TutorialResources'\n  Name = 'TutorialVM2'\n  ImageName = 'Win2016Datacenter'\n  VirtualNetworkName = 'TutorialVM1'\n  SubnetName = 'TutorialVM1'\n  PublicIpAddressName = 'tutorialPublicIp2'\n  Credential = $cred\n  OpenPorts = 3389\n}\n$newVM2 = New-AzureRmVM @vm2Params\n\n$newVM2\n```\n\n```Output\nResourceGroupName        : TutorialResources\nId                       : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources/providers/Microsoft.Compute/virtualMachines/TutorialVM2\nVmId                     : 12345678-9abc-def0-1234-56789abcedf1\nName                     : TutorialVM2\nType                     : Microsoft.Compute/virtualMachines\nLocation                 : eastus\nTags                     : {}\nHardwareProfile          : {VmSize}\nNetworkProfile           : {NetworkInterfaces}\nOSProfile                : {ComputerName, AdminUsername, WindowsConfiguration, Secrets}\nProvisioningState        : Succeeded\nStorageProfile           : {ImageReference, OsDisk, DataDisks}\nFullyQualifiedDomainName : tutorialvm2-dfa5af.eastus.cloudapp.azure.com\n```\n\nAby pobrać publiczny adres IP nowej maszyny wirtualnej, można pominąć kilka kroków, ponieważ jest on zwracany we właściwości FullyQualifiedDomainName obiektu \\$newVM2. Korzystając z następującego polecenia, nawiąż połączenie przy użyciu Pulpitu zdalnego.\n\n```powershell\nmstsc.exe /v $newVM2.FullyQualifiedDomainName\n```"
- durationInMinutes: 4
  title: Czyszczenie
  content: "Teraz, po ukończeniu samouczka, nadszedł czas na wyczyszczenie utworzonych zasobów. Pojedyncze zasoby możesz usunąć za pomocą polecenia `Remove-AzureRmResource`, ale najbezpieczniejszym sposobem usunięcia wszystkich zasobów w grupie zasobów jest usunięcie grupy za pomocą polecenia `Remove-AzureRmResourceGroup`.\n\n```powershell\n$job = Remove-AzureRmResourceGroup -Name TutorialResources -Force -AsJob\n\n$job\n```\n\n```Output\nId     Name            PSJobTypeName   State         HasMoreData     Location             Command\n--     ----            -------------   -----         -----------     --------             -------\n1      Long Running... AzureLongRun... Running       True            localhost            Remove-AzureRmResource...\n```\n\nTo polecenie usuwa zasoby utworzone podczas tego samouczka i gwarantuje cofnięcie ich przydziału w odpowiedniej kolejności. Parametr `-AsJob` zapobiega blokowaniu programu PowerShell podczas usuwania. Aby poczekać na zakończenie usuwania, użyj następującego polecenia:\n\n```powershell\nWait-Job -Id $job.Id\n```\n\nPo zakończeniu czyszczenia samouczek jest ukończony. Kontynuuj, aby zobaczyć podsumowanie zdobytych umiejętności oraz linki do zasobów, które pomogą Ci przy następnych krokach."
- durationInMinutes: 1
  title: Podsumowanie
  content: "\nGratulacje! Po ukończeniu tego samouczka wiesz już, jak tworzyć maszyny wirtualne przy użyciu nowych lub istniejących zasobów oraz używać wyrażeń i innych poleceń programu Azure PowerShell do przechwytywania danych, które mają być przechowywane w zmiennych powłoki, a także znasz niektóre zasoby tworzone dla maszyn wirtualnych platformy Azure.\n\nCo zrobisz dalej, zależy od tego, do czego zamierzasz używać programu Azure PowerShell. Istnieje wiele materiałów, które bardziej szczegółowo zgłębiają funkcje omówione w tym samouczku.\n\n### <a name=\"in-depth-azure-powershell-documentation\"></a>Szczegółowa dokumentacja programu Azure PowerShell\n\nWarto poświęcić trochę czasu na zapoznanie się z pełnym zestawem [dokumentacji programu Azure PowerShell](overview.md).\n\nAby uzyskać więcej informacji na temat poleceń używanych w tym samouczku, zobacz następujące artykuły.\n\n- [New-AzureRmResourceGroup](/powershell/module/azurerm.resources/new-azurermresourcegroup)\n- [Get-Credential](/powershell/module/microsoft.powershell.security/get-credential)\n- [New-AzureRmVM](/powershell/module/azurerm.compute/new-azurermvm)\n- [Select-Object](/powershell/module/microsoft.powershell.utility/select-object)\n- [Get-AzureRmPublicIpAddress](/powershell/module/azurerm.network/get-AzureRmPublicIpAddress)\n- [Remove-AzureRmResourceGroup](/powershell/module/azurerm.resources/Remove-AzureRmResourceGroup)\n- [Wait-Job](/powershell/module/microsoft.powershell.core/wait-job)\n\nDostępne są także artykuły, które bardziej szczegółowo omawiają funkcje pokazane w tym samouczku.\n\n- [Operacje tworzenia pakietów parametrów programu PowerShell](/powershell/module/microsoft.powershell.core/about/about_splatting)\n- [Zapytania](queries-azureps.md)\n- [Formatowanie](formatting-output.md)\n- [Używanie zadań programu PowerShell](using-psjobs.md)\n\n### <a name=\"sample-scripts\"></a>Przykładowe skrypty\n\nJeśli chcesz od razu zacząć korzystać z określonych zadań, przejrzyj niektóre przykładowe skrypty.\n\n- [Maszyny wirtualne z systemem Linux](/azure/virtual-machines/linux/powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Maszyny wirtualne z systemem Windows](/azure/virtual-machines/windows/powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Web Apps](/azure/app-service-web/app-service-powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Bazy danych SQL](/azure/sql-database/sql-database-powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Cosmos DB](/azure/cosmos-db/powershell-samples?toc=%2fpowershell%2fmodules%2ftoc.json)\n\n### <a name=\"feedback\"></a>Opinia\n\nJeśli chcesz przekazać opinię lub sugestie albo zadać pytania, istnieje wiele sposobów kontaktu.\n\n* `Send-Feedback` to wbudowane polecenie programu Azure PowerShell, które umożliwia przekazanie dowolnej opinii zespołowi.\n* Prześlij wniosek dotyczący funkcji lub raport o usterce do [repozytorium programu Azure PowerShell](https://github.com/Azure/azure-powershell/issues).\n* Zadaj pytanie lub uzyskaj wyjaśnienie, rejestrując problem w [repozytorium dokumentacji programu Azure PowerShell](https://github.com/Azure/azure-docs-powershell/issues).\n\nMamy nadzieję, że podoba Ci się program Azure PowerShell."
